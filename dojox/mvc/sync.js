//>>built
define("dojox/mvc/sync",["dojo/_base/lang","dojo/_base/config","dojo/_base/array","dojo/has"],function(f,m,v,h){function s(a,b,c,d,e,g,l,n,k,r){if(!c(k,n)&&!("*"==e&&0>v.indexOf(d.get("properties")||[l],l)||"*"==e&&l in(r||{}))){c="*"==e?l:e;h("mvc-bindings-log-api")&&x(d,c,g,l);try{k=a?a(k,b):k}catch(q){h("mvc-bindings-log-api");return}h("mvc-bindings-log-api");f.isFunction(d.set)?d.set(c,k):d[c]=k}}var n=f.getObject("dojox.mvc",!0);h.add("mvc-bindings-log-api",(m.mvc||{}).debugBindings);var w;if(h("mvc-bindings-log-api"))var x=
function(a,b,c,d){return[[c.canConvertToLoggable||!c.declaredClass?c:c.declaredClass,d].join(":"),[a.canConvertToLoggable||!a.declaredClass?a:a.declaredClass,b].join(":")]};m={from:1,to:2,both:3};w=function(a,b,c,d,e){var g=(e||{}).converter,l,m,k;g&&(l={source:a,target:c},m=g.format&&f.hitch(l,g.format),k=g.parse&&f.hitch(l,g.parse));var r=[],q=[],t=f.mixin({},a.constraints,c.constraints),g=(e||{}).bindDirection||n.both,u=(e||{}).equals||w.equals;h("mvc-bindings-log-api")&&x(a,b,c,d);if("*"==d){if("*"!=
b)throw Error("Unmatched wildcard is specified between source and target.");e=c.get("properties");if(!e){e=[];for(var p in c)c.hasOwnProperty(p)&&"_watchCallbacks"!=p&&e.push(p)}q=c.get("excludes")}else e=[b];g&n.from&&(f.isFunction(a.set)&&f.isFunction(a.watch)?r.push(a.watch.apply(a,("*"!=b?[b]:[]).concat([function(b,f,e){s(m,t,u,c,d,a,b,f,e,q)}]))):h("mvc-bindings-log-api"),v.forEach(e,function(b){if("*"!=d||!(b in(q||{}))){var e=f.isFunction(a.get)?a.get(b):a[b];s(m,t,u,c,"*"==d?b:d,a,b,void 0,
e)}}));g&n.to&&(g&n.from||v.forEach(e,function(b){if("*"!=d||!(b in(q||{}))){var e=f.isFunction(c.get)?c.get(d):c[d];s(k,t,u,a,b,c,"*"==d?b:d,void 0,e)}}),f.isFunction(c.set)&&f.isFunction(c.watch)?r.push(c.watch.apply(c,("*"!=d?[d]:[]).concat([function(d,e,f){s(k,t,u,a,b,c,d,e,f,q)}]))):h("mvc-bindings-log-api"));h("mvc-bindings-log-api");p={};p.unwatch=p.remove=function(){for(var a=null;a=r.pop();)a.unwatch();h("mvc-bindings-log-api")};return p};f.mixin(n,m);return f.setObject("dojox.mvc.sync",
f.mixin(w,{equals:function(a,b){return a===b||"number"==typeof a&&isNaN(a)&&"number"==typeof b&&isNaN(b)||f.isFunction((a||{}).getTime)&&f.isFunction((b||{}).getTime)&&a.getTime()==b.getTime()||(f.isFunction((a||{}).equals)?a.equals(b):f.isFunction((b||{}).equals)?b.equals(a):!1)}},m))});
//@ sourceMappingURL=sync.js.map